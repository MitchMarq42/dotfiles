# vim: set ft=sh :

# Custom config for sway
#
# I copied this to ~/.config/sway/config and edited it to my liking.
#
# I have also attempted to read `man 5 sway`, but have not yet obtained the zen of complete reference.

### Variables
#
# Logo key. Use Mod4 for logo cause it's the best.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | wofi --show drun -t alacritty -i -G | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/.local/share/backgrounds/mojave_midnight.jpg fill

# Lower refresh rate to avoid stupid crashes. What are we, heathens?
output eDP-1 mode 1920x1080@47.982Hz

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Slightly broken configuration:
#
# exec swayidle -w \
#          timeout 300 '~/.local/bin/waylock' \
#          timeout 2700 'swaymsg "output * dpms off"' \
#          resume 'swaymsg "output * dpms on"' \

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Modified configuration:
#
    input "type:touchpad" {
       dwt disabled
       tap enabled
       natural_scroll enabled
       middle_emulation enabled
       repeat_delay 200
       repeat_rate 60
    }

    input "type:keyboard" {
       xkb_options "custom:super_esc"
       xkb_numlock enable
       repeat_delay 300
       repeat_rate 50
    }

    input * {
        scroll_button button9 274
    }

    seat seat0 xcursor_theme Mocu-White-Right

    exec_always {
        gsettings set org.gnome.desktop.interface cursor-theme "Mocu-White-Right"
    }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

#boilerplate for having audio
exec pulseaudio

# Boilerplate for gestures
exec_always libinput-gestures -c ~/.config/libinput-gestures.conf

# boilerplate for notifications (mako will NOT start itself up automatically)
exec dbus-daemon --session --address=unix:path=$XDG_RUNTIME_DIR/bus
exec_always mako

# Restore old brightness
exec ~/.local/bin/brightctl -r

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    #start a browser
    bindsym $mod+w exec gtk-launch brave-browser

    # Kill focused window
    bindsym $mod+Shift+c kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Brightness keys (custom)
    bindsym --locked XF86MonBrightnessUp exec /home/mitch/.local/bin/brightctl +
    bindsym --locked XF86MonBrightnessDown exec /home/mitch/.local/bin/brightctl -

    # Volume keys (custom, for some reason)
    bindsym --locked XF86AudioRaiseVolume exec pamixer -ui 2
    bindsym --locked XF86AudioLowerVolume exec pamixer -ud 2
    bindsym --locked XF86AudioMute exec pamixer --toggle-mute

    # Screen rotation (custom, clearly)
    bindsym $mod+Left exec "~/.local/bin/mrandr right"
    bindsym $mod+Down exec "~/.local/bin/mrandr normal"
    bindsym $mod+Up exec "~/.local/bin/mrandr inverted"
    bindsym $mod+Right exec "~/.local/bin/mrandr left"

    # Lock screen (custom)
    bindsym $mod+x exec ~/.local/bin/waylock

    # Drag windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+q reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec wlogout

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+v splitt

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 15px
    bindsym $down resize grow height 15px
    bindsym $up resize shrink height 15px
    bindsym $right resize grow width 15px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 15px
    bindsym Down resize grow height 15px
    bindsym Up resize shrink height 15px
    bindsym Right resize grow width 15px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command "waybar"
}

#
# Gaps:
#
gaps inner 20

# fake fullscreen (custom)-- Hides bar and disables gaps
exec_always echo yes > $XDG_RUNTIME_DIR/swayisgaps
bindsym $mod+b exec ~/.local/bin/swayhide

#
# Remove title bars:
#
default_border pixel 1
default_floating_border pixel 1
client.focused #ff0000 #ff0000 #ff0000 #ff6f6f
client.unfocused #8f8f8f #8f8f8f #8f8f8f

include /etc/sway/config.d/*

# stupid systemd integration or sth idk
exec "systemctl --user import-environment; systemctl --user start sway-session.target"
exec /usr/lib/sway-systemd/session.sh --with-cleanup
exec /usr/lib/sway-systemd/assign-cgroups.py

exec $term
