* Custom Scripts
** brightctl
Toggle brightness up and down.
*** usage:
**** To turn brightness up:
#+begin_src sh
  brightctl +
#+end_src
**** To turn brightness down:
#+begin_src sh
  brightctl -
#+end_src
**** To save brightness:
#+begin_src sh
  brightctl -s
#+end_src
**** To restore saved brightness:
#+begin_src sh
  brightctl -r
#+end_src
**** put in sway/i3 config to bind to brightness control keys
#+begin_src conf
  # Restore old brightness
  exec ~/.local/bin/brightctl -r
  # Brightness keys (custom)
  bindsym --locked XF86MonBrightnessUp exec brightctl +
  bindsym --locked XF86MonBrightnessDown exec brightctl -
#+end_src
** dots
Manage and update dotfiles, including this file!
*** Locations:
- =~/.local/git/dotfiles=: a git bare repository of your dotfiles. My dotfiles.
*** Usage:
**** To reset all tracked files to the repo's index:
#+begin_src sh
  dots checkout -f
#+end_src
**** To commit all changed files with message "tweak settings"
#+begin_src sh
  dots commit -am "tweak settings"
#+end_src
For more, see =man git=.
** fixpath
Trim and optimize the $PATH variable
*** Usage:
**** To fix PATH in the current shell
#+begin_src sh
  source ~/.local/bin/fixpath
#+end_src
** mitch-setup.sh
A broken and in-progress setup script. Not good yet, please ignore it.
** mrandr
*** Usage:
Use it as you would =xrandr -o=. E.G., =mrandr right= rotates the screen
clockwise by 90 degrees. Et cetera.

There is a comment at the beginning of the executable linking to an extremely
helpful Ubuntu Wiki page on the subject, so check that out too.

To make it run automatically on gyroscope/accelerometer events, learn how ACPI
works or something.

Instead, bind it to a hotkey:

On Xorg you can bind it to ctrl+alt+arrowkey

**** via sxhkd (https://wiki.archlinux.org/title/sxhkd):
#+begin_src conf
  control + alt + Up
  /home/mitch/.local/bin/mrandr inverted
  control + alt + Down
  /home/mitch/.local/bin/mrandr normal
  control + alt + Left
  /home/mitch/.local/bin/mrandr right
  control + alt + Right
  /home/mitch/.local/bin/mrandr left
#+end_src

**** for sway/i3:
#+begin_src conf
  bindsym $mod+Left exec "~/.local/bin/mrandr right"
  bindsym $mod+Down exec "~/.local/bin/mrandr normal"
  bindsym $mod+Up exec "~/.local/bin/mrandr inverted"
  bindsym $mod+Right exec "~/.local/bin/mrandr left"
#+end_src
** runemacs
Broken. Supposed to run emacs as a client while preserving arguments, but
actually just does nothing.
** stupid
Get the process ID for a program, or the name of a numbered process
*** Usage:
**** To find the process ID of something containing the name "vi":
#+begin_src sh
  stupid vi
#+end_src
** swayhide
Hide or show waybar and sway borders. This effectively toggles "fake fullscreen"
like in Xmonad (default binding <alt>-b)
*** Files:
- =$XDG_RUNTIME_DIR/swayisgapps= (default =/run/user/1000=): the file in which
  the state of sway gaps is stored.
- [[~/.config/sway/config]]: contains (or you can add) a binding to run this
  script. The same binding turns it on and off.
*** Usage:
#+begin_src conf
  ## in sway config file
  # fake fullscreen (custom)-- Hides bar and disables gaps
  exec_always echo yes > $XDG_RUNTIME_DIR/swayisgaps
  bindsym $mod+b exec ~/.local/bin/swayhide
#+end_src
** terminal
Broken. Supposed to launch the default terminal for the current DE or something,
but actually just fails when launched from the background.
** waylock
Lock the screen on sway (or possibly other wlroots-based compositors). Requires
=imagemagick=, =grim=, and =swaylock= to be installed, as this is pretty much a
wrapper for both.
*** Files:
- [[~/.config/sway/config]]: Put the binding here.
- =/tmp/scrot.png=: File generated by this script to use as an overlay.
*** Usage:
#+begin_src conf
  # Lock screen (custom)
  bindsym $mod+x exec ~/.local/bin/waylock
#+end_src
